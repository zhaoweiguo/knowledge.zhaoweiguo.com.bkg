常用
####

协议栈积累多少数据才能发送::

    1. 每个网络包能容纳的数据长度
        协议栈会根据 MTU 来进行判断(最大 1500 字节)
    2. 时间(毫秒为单位)
        即便缓冲区中的数据长度没有达到 MSS
        当经过一定时间之后， 就会把网络包发送出去
    3. 应用程序指定“不等待填满缓冲区直接发送”
        协议栈就会按照要求直接发送数据。
        像浏览器这种会话型的应用程序在向服务器发送数据时，等待填满缓冲区导致延迟会产生很大影响，
          因此一般会使用直接发送的选项。


.. figure:: /images/protocols/tcp_mtu.png

   MTU 与 MSS


.. figure:: /images/protocols/tcp_mtu2.png

   应用程序数据的拆分发送

和服务器的通信结束后，套接字并不会立即被删除，而是等待一段时间之后再被删除原因::

    断开的操作顺序如下:
    1. 客户端发送 FIN 
    2. 服务器返回 ACK 号 
    3. 服务器发送 FIN 
    4. 客户端返回 ACK 号

    如果最后客户端返回的 ACK 号丢失了，结果会如何呢:
      服务 器没有接收到 ACK 号，可能会重发一次 FIN
      客户端的套接字已 经删除了，对应的端口号就会被释放出来
      别的应用程序新创建的套接字，碰巧又被分配了同一个端口号
      这时，服务器重发的 FIN 正好到达，新套接字就开始执行断开操作

    注: 一般来说会等待几分钟之后再删除套接字


.. figure:: /images/protocols/tcp_flow.png

   TCP 的整体流程

说明::

    连接阶段: 3次握手
    断开阶段: 4次挥手


TCP 协议的控制信息，主要用来控制连接操作::

    1. ACK
    表示接收数据序号字段有效，一般用于通知发送方数据已经正确接收
    代表接收确认
    2. PSH
    表示发送方应用程序希望不等待发送缓冲区填充完毕，立即发送这个包
    3. RST
    强制断开连接，用于异常中断
    4. SYN
    开始通信时连接操作中发送的第一个包中，SYN 为 1，ACK 为 0。
      如果能够过滤这样的包，则后面的操作都无法继续，可以屏蔽整个访问
    SYN 为 1: 表示这是一个发起连接的包
    5. FIN
    表示断开连接



使用描述符来指代套接字的原因如下::

    1. 等待连接的套接字中没有客户端 IP 地址和端口号
    2. 使用描述符这一种信息比较简单










