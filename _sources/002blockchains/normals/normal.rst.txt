常用
####

区块链的六层模型::

    区块链技术的模型是由自下而上的数据层、网络层、共识层、激励层、合约层和应用层组成。

    第一层“数据层”，封装了底层数据区块的链式结构，以及相关的非对称公私钥数据加密技术和时间戳等技术，
      这是整个区块链技术中最底层的数据结构。
      这些技术是构建全球金融系统的基础，数十年的使用证明了它非常安全的可靠性。
      而区块链，正式巧妙地把这些技术结合在了一起。
    第二层“网络层”，包括P2P组网机制、数据传播机制和数据验证机制等。
      P2P组网技术早期应用在BT这类P2P下载软件中，这就意味着区块链具有自动组网功能。
    第三层“共识层”，封装了网络节点的各类共识机制算法。
      共识机制算法是区块链的核心技术，因为这决定了到底是谁来进行记账，
      而记账决定方式将会影响整个系统的安全性和可靠性。
      目前已经出现了十余种共识机制算法，其中比较最为知名的有:
        工作量证明机制（PoW，Proof of Work）、
        权益证明机制（PoS，Proof ofStake）、
        股份授权证明机制（DPoS，Delegated ProofofStake）等。
      数据层、网络层、共识层是构建区块链技术的必要元素，缺少任何一层都将不能称之为真正意义上的区块链技术
    第四层“激励层”，将经济因素集成到区块链技术体系中来，包括经济激励的发行机制和分配机制等，
      主要出现在公有链当中。在公有链中必须激励遵守规则参与记账的节点，并且惩罚不遵守规则的节点，
      才能让整个系统朝着良性循环的方向发展。而在私有链当中，则不一定需要进行激励，
      因为参与记账的节点往往是在链外完成了博弈，通过强制力或自愿来要求参与记账。
    第五层“合约层”，封装各类脚本、算法和智能合约，是区块链可编程特性的基础。
      比特币本身就具有简单脚本的编写功能，而以太坊极大的强化了编程语言协议，
      理论上可以编写实现任何功能的应用。如果把比特币看成是全球账本的话，
      以太坊可以看作是一台“全球计算机”，任何人都可以上传和执行任意的应用程序，
      并且程序的有效执行能得到保证。
    第六层“应用层”，封装了区块链的各种应用场景和案例，比如:
      搭建在以太坊上的各类区块链应用即部署在应用层，而未来的可编程金融和可编程社会也将会是搭建在应用层。





Ethereum vs Hypterledger Fabic vs EOS 对比::

    表 1.1. 智能合约对比

    Ethereum  Hypterledger Fabic  EOS
    合约语言  Solidity  Go/Node.js/Java C/C++
    难易程度  容易  较容易 难
    成熟度 非常成熟  较成熟 不成熟
    调试环境  有Remix,Truffle，钱包合约工具等等 没有较好的调试环境 只能手工排查
    扩展性 Solidity 无法扩展，不能引用外部开发库 可以扩展，导入第三方库 可以扩展，并且支持STL开发库











